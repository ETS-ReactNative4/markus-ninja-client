@import "@material/button/mixins";
@import "@material/layout-grid/mixins";
@import "@material/list/mixins";
@import "@material/rtl/mixins";
@import "@material/theme/mixins";
@import "@material/theme/variables";

// Fixes size of FontAwesomeIcon within mdc-icon-button
.mdc-icon-button svg {
  &.svg-inline--fa {
    width: 24px;
    height: 24px;
  }
}

// Fixes size of FontAwesomeIcon within mdc-list-item
.mdc-list-item__graphic.svg-inline--fa {
  width: 24px;
}

//====================================
// Get FontAwesome icon to work with mdc
.mdc-icon-button__icon {
  &.svg-inline--fa {
    display: block;
  }

  // stylelint-disable-next-line plugin/selector-bem-pattern
  &.mdc-icon-button__icon--on {
    &.svg-inline--fa {
      display: none;
    }
  }
}

.mdc-icon-button--on .mdc-icon-button__icon {
  &.svg-inline--fa {
    display: none;
  }

  // stylelint-disable-next-line plugin/selector-bem-pattern
  &.mdc-icon-button__icon--on {
    &.svg-inline--fa {
      display: block;
    }
  }
}
//====================================

// Similar functionality of the icon button for the regular button too.
.mdc-button {
  .mdc-button__icon {
    &.mdc-button__icon--on {
      display: none;
    }
  }

  &.mdc-button--on {
    .mdc-button__icon {
      display: none;

      &.mdc-button__icon--on {
        display: inline-block;
      }
    }
  }
}

// automatically apply dense class to buttons under media query phone
.mdc-button,
.mdc-button--raised,
.mdc-button--unelevated,
.mdc-button--outlined {
  @include mdc-layout-grid-media-query_(phone) {
    @include mdc-button--dense_;
  }
}

.mdc-list-item {
  .mdc-list-item__fill {
    width: 100%;
    align-self: stretch;
    display: flex;
    align-items: center;
  }
}

.mdc-text-field--with-leading-icon .mdc-text-field__icon,
.mdc-text-field--with-trailing-icon .mdc-text-field__icon {
  &.mdc-icon-button {
    bottom: 4px;
  }
}

@function mdc-theme-background-url-prop-value($style) {
  @if type-of($style) == "color" {
    $string: inspect($style); 
    @return str-slice($string, 2, -1);
  }

  @if not map-has-key($mdc-theme-property-values, $style) {
    @error "Invalid theme property: '#{$style}'. Choose one of: #{map-keys($mdc-theme-property-values)}";
  }

  $string: inspect(map-get($mdc-theme-property-values, $style));

  @return str-slice($string, 2, -1);
}
